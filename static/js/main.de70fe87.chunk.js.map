{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/Error/Error.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","_ref","todos","onSelectTodo","selectedId","_jsxs","className","children","_jsx","map","_ref2","id","title","completed","classNames","type","onClick","TodoFilter","query","onChangeQuery","onSelectStatus","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","concat","Error","hasError","onModalClose","TodoModal","todo","onClose","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","user","setUser","_useState5","_useState6","setError","useEffect","_loadUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","loadUser","href","name","App","setTodos","selectedTodo","setSelectedTodo","setQuery","_useState7","_useState8","selectedStatus","setSelectedStatus","_useState9","_useState10","_loadTodos","todosData","loadTodos","visibleTodos","useMemo","searchedTodos","_toConsumableArray","filter","toLowerCase","includes","trim","_Fragment","find","todoItem","length","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de70fe87.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n  onSelectTodo: (id: number) => void;\n  selectedId?: number;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onSelectTodo,\n  selectedId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, title, completed }: Todo) => (\n          <tr data-cy=\"todo\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames('has-text-success', {\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectTodo(id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': id === selectedId,\n                    'fa-eye': id !== selectedId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type TodoFilterProps = {\n  query: string,\n  onChangeQuery: (value: string) => void;\n  selectedStatus: string,\n  onSelectStatus: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  query,\n  onChangeQuery,\n  onSelectStatus,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => onSelectStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Error.scss';\n\ntype ErrorProps = {\n  hasError: string;\n  onModalClose: () => void;\n};\n\nexport const Error: React.FC<ErrorProps> = ({ hasError, onModalClose }) => (\n  <div className=\"Error notification is-danger is-light\">\n    <div className=\"Error-message\">\n      {`Error: ${hasError}`}\n    </div>\n\n    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n    <button\n      type=\"button\"\n      className=\"button is-danger\"\n      data-cy=\"modal-close\"\n      onClick={() => onModalClose()}\n    >\n      Ok\n    </button>\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Error } from '../Error';\n\ninterface TodoModalProps {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, onClose }) => {\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = todo;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n  const [hasError, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function loadUser() {\n      try {\n        const userData = await getUser(userId);\n\n        setUser(userData);\n      } catch (error) {\n        setError('An error occurred while loading the goods.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {hasError\n        && (\n          <Error hasError={hasError} onModalClose={onClose} />\n        )}\n\n      {!hasError && (isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n              }\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Error } from './components/Error';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [query, setQuery] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [hasError, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function loadTodos() {\n      try {\n        const todosData = await getTodos();\n\n        setTodos(todosData);\n      } catch (error) {\n        setError('An error occurred while loading the goods.');\n      }\n    }\n\n    loadTodos();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let searchedTodos = [...todos];\n\n    if (query) {\n      searchedTodos = searchedTodos.filter(todo => (\n        todo.title.toLowerCase().includes(query.toLowerCase().trim())));\n    }\n\n    switch (selectedStatus) {\n      case ('active'): {\n        searchedTodos = searchedTodos.filter(todo => !todo.completed);\n        break;\n      }\n\n      case ('completed'): {\n        searchedTodos = searchedTodos.filter(todo => todo.completed);\n        break;\n      }\n\n      default: break;\n    }\n\n    return searchedTodos;\n  }, [query, selectedStatus, todos]);\n\n  const handleSelectTodo = (id: number) => {\n    const todo = todos.find(todoItem => todoItem.id === id);\n\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={setQuery}\n                selectedStatus={selectedStatus}\n                onSelectStatus={setSelectedStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={visibleTodos}\n                onSelectTodo={handleSelectTodo}\n                selectedId={selectedTodo?.id}\n              />\n              {!todos.length && <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {hasError\n        && (\n          <Error hasError={hasError} onModalClose={() => setSelectedTodo(undefined)} />\n        )}\n\n      {selectedTodo && <TodoModal todo={selectedTodo} onClose={() => setSelectedTodo(undefined)} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}